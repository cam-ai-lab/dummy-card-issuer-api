name: API Quality Gates

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint-and-validate:
    name: Code Quality & API Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier format check
        run: npx prettier --check "src/**/*.ts"

      - name: Build application
        run: npm run build

      - name: Spectral API Linting
        run: npm run spectral:lint:ci
        continue-on-error: false

      - name: Validate OpenAPI spec
        run: |
          npx swagger-parser validate openapi.yaml

      - name: Comment PR with Spectral results
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              execSync('npm run spectral:lint:ci', { stdio: 'pipe' });
            } catch (error) {
              const output = error.stdout.toString();
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸš¨ API Linting Failed\n\nSpectral found issues with your OpenAPI specification:\n\n\`\`\`\n${output}\n\`\`\`\n\nPlease fix these issues before merging.`
              });
            }

  api-contract-testing:
    name: API Contract Validation
    runs-on: ubuntu-latest
    needs: lint-and-validate
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start API server
        run: |
          npm start &
          echo $! > server.pid
          sleep 10

      - name: Test API endpoints
        run: |
          # Test health endpoint
          curl -f http://localhost:3000/health || exit 1
          
          # Test credit card endpoint with valid account
          curl -f http://localhost:3000/credit-cards/4532-1234-5678-9012 || exit 1
          
          # Test 404 case
          curl -f http://localhost:3000/credit-cards/0000-0000-0000-0000 && exit 1 || true

      - name: Stop API server
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid)
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          base: main
          head: HEAD
          extra_args: --debug --only-verified
